CREATE TABLE STUDENT(
    STU_NO NUMBER(10),
    NAME VARCHAR2(10) NOT NULL,
    KOR NUMBER(10) DEFAULT 0 NOT NULL,
    ENG NUMBER(10) DEFAULT 0 NOT NULL,
    MAT NUMBER(10) DEFAULT 0 NOT NULL,
    TOT NUMBER(20) DEFAULT 0,
    AVR NUMBER(20) DEFAULT 0,
    DEPT_CODE NUMBER(20));
    
alter table STUDENT add constraint STUDENT_STU_NO_PK PRIMARY KEY(STU_NO);
alter table STUDENT add constraint STUDENT_DEPT_CODE_FK FOREIGN KEY(DEPT_CODE) REFERENCES DEPT01(DEPT_CODE);

CREATE TABLE DEPT01(
    DEPT_CODE NUMBER(20),
    DEPT_NAME VARCHAR2(20) NOT NULL );
alter table DEPT01 add constraint DEPT01_DEPT_CODE_PK PRIMARY KEY(DEPT_CODE);
DESC DEPT01;
select * from user_constraints where table_name = 'STUDENT';

-- 부서별에 따라 급여를 인상하도록 하자. (조인 : INNER JOIN, OUTER JOIN, SELF JOIN, CROSS JOIN)
-- (직원번호, 직원명, 직급, 급여)
-- 부서ID에 따라서 'MARKETING'인 직원은 5%, 'PURCHASING'인 사원은 10%, 
-- 'HUMAN RESOURCES'인 사원은 15%, 'IT'인 사원은 20% 인상한다.
SELECT * FROM DEPARTMENTS;
SELECT EMPLOYEE_ID, FIRST_NAME, SALARY, DEPARTMENT_ID FROM EMPLOYEES;
SELECT * FROM EMPLOYEES INNER JOIN DEPARTMENTS ON EMPLOYEES.DEPARTMENT_ID = D.DEPARTMENT_ID;

SELECT EMPLOYEE_ID, FIRST_NAME, JOB_ID, SALARY, EMPLOYEES.DEPARTMENT_ID, DEPARTMENT_NAME,
    CASE
    WHEN UPPER(DEPARTMENTS.DEPARTMENT_NAME) = UPPER('MARKETING') THEN SALARY * 1.05
    WHEN UPPER(DEPARTMENTS.DEPARTMENT_NAME) = UPPER('PURCHASING') THEN SALARY * 1.10
    WHEN UPPER(DEPARTMENTS.DEPARTMENT_NAME) = UPPER('HUMAN RESOURCES') THEN SALARY * 1.15
    WHEN UPPER(DEPARTMENTS.DEPARTMENT_NAME) = UPPER('IT') THEN SALARY * 1.20
    END NEWSALARY
FROM EMPLOYEES INNER JOIN DEPARTMENTS ON EMPLOYEES.DEPARTMENT_ID = DEPARTMENTS.DEPARTMENT_ID
WHERE UPPER(DEPARTMENTS.DEPARTMENT_NAME) IN (UPPER('MARKETING'),UPPER('PURCHASING'),UPPER('HUMAN RESOURCES'),UPPER('IT'))
ORDER BY NEWSALARY DESC;
